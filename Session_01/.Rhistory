v1 <- c(1, 3, 5, 3, 2)
sort(v1)
sort(-v1)
=sort(-v1)
- sort(-v1)
v1
fix(v1)
smaple()
sample()
sample(c(1,4,5))
sample(c(1,4,5))
sample(c(1,4,5))
sample(c(1,4,5))
v3 <- c('a', 'b', 'd', 'k')
v1 %in% c('m', 'b')
'b' %in% c('m', 'b')
'c' %in% c('m', 'b')
shiny::runApp('work_space/HERA/visualizer')
shiny::runApp('work_space/HERA/visualizer')
x <- rnorm(1000)
qplot(x, geom="density")
library(ggplot2)
qplot(x, geom="density")
mean(x)
qplot(sample=x) + geom_abline(slope=1, intercept=0)
x1 <- rnorm(1000, m=5)
x2 <- rnorm(1000, m=5, sd=5)
qplot(sample=x1) + geom_abline(slope=1, intercept=0)
qplot(sample=x2) + geom_abline(slope=1, intercept=0)
c(7, 4, 2, 9, 8, 5, 4, 7, 8, 5)
v1 <- c(7, 4, 2, 9, 8, 5, 4, 7, 8, 5)
str(v1) # v1.str()
v2 <- c(1, 3.5, 'm', T)
v2
v3 <- c(1, 1.5)
v4 <- c('a', 'b', 'c')
v5 <- c(T, F, TRUE, FALSE)
v6 <- NULL
v6 <- c(3, NA, 4)
help("integer")
?"integer"
?chi
??chi
v2
v4
v7 <- c(v2, v4)
length(v7)
v7
v8 <- 4
nchar(v7)
c(1, 2, 3) + c(5, 6, 7)
v9 <- 1:100
v9
head(v9)
head(v9)
tail(v9)
head(v9, 10)
head
head(x = v9, n = 10)
head(n = 10, x = v9)
v9[22]
v9[c(22, 23, 24)]
v9[c(-22, -23, -24)]
sort(v9)
sort(v9, T)
sort(v9, T)[c(22, 23, 24)]
v10 <- c('c', 'a', 'd', 'k', 'f')
v10[c(2, 1, 3, 5, 4)]
v11 <- c(45, 12, 0, 234)
order(v11)
aorder(v11)
v11[order(v11)]
sort(v10)
load()
library(moments)
d1 <- rbinom(5, 100, 0.5)
barplot(d1)
d1 <- rbinom(100, 100, 0.5)
barplot(d1)
d1 <- rbinom(100, 100, 0.35)
barplot(d2)
d1 <- rbinom(100, 100, 0.5)
d2 <- rbinom(100, 100, 0.35)
barplot(d2)
barplot(sort(d2*
)
barplot(sort(d2))
barplot(sort(d1))
mean(d1)
mean(d2)
mean(d2)
skewness(d2)
skewness(d1)
v1 <- c('vec1', 'vec2', 'vec3', 'vec4')
h1 <- c(30, 50, 12, 45)
barplot(h1)
names(h1) <- v1
barplot(h1)
barplot(sort(h1))
barplot(sort(h1, asc=T))
?sort
barplot(sort(h1, decreasing=T))
install.packages("plotrix")
install.packages(c("caret", "jsonlite", "Matrix", "ndtv", "pbkrtest"))
pbinon(1, 10, 0.5)
pbinom(1, 10, 0.5)
pbinom(5, 10, 0.5)
dbinom(5, 10, 0.5)
qbinom(0.5, 10, 0.5)
qbinom(0.0107, 10, 0.5)
pbinom(0:10, 10, 0.5)
plot(pbinom(0:10, 10, 0.5), type='b')
plot(dbinom(0:10, 10, 0.5), type='b')
barplot(dbinom(0:10, 10, 0.5))
barplot(dbinom(0:10, 10, 0.3))
barplot(dbinom(0:10, 10, 0.2))
summary(dbinom(0:10, 10, 0.2))
mean(dbinom(0:10, 10, 0.2))
sd(dbinom(0:10, 10, 0.2))
plot(rnorm(0, 0.5))
plot(rnorm(0.5 0))
rnorm(100)
plot(rnorm(100))
plot(rnorm(10000))
plot(dbinom(0:1000, 1000, 0.5), type='b')
points(0:1000, dbinom(0:1000, 1000, 0.3), col='green')
plot(dbinom(0:1000, 1000, 0.5), type='l')
lines(0:1000, dbinom(0:1000, 1000, 0.3), col='green')
plot(dbinom(0:1000, 1000, 0.5), type='l', ylim=0.4)
plot(dbinom(0:1000, 1000, 0.5), type='l', ylim=0:0.4)
plot(dbinom(0:1000, 1000, 0.5), type='l', ylim=c(0, 0.4))
plot(dbinom(0:1000, 1000, 0.5), type='l', ylim=c(0, 0.1))
lines(0:1000, dbinom(0:1000, 1000, 0.3), col='green')
lines(0:1000, dbinom(0:1000, 1000, 0.1), col='red')
lines(0:1000, dbinom(0:1000, 1000, 0.95), col='yellow')
library("ggmap")
library(maptools)
library(maps)
visited <- c("Berlin", "Moskow", "London", "Melbourne", "Tokio", "Hangzhou", "York", "Kent, Ohio", "Athen", "Padua", "Graz", "Wien", "Olomouc", "Prag", "Krakau",
"Wrozlaw", "San Paolo", "Bratislava", "Barcelona", "Novosibirsk", "St Petersburg", "Hayderabad", "Kalkutta", "Szeged")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
#> dput(visit.x)
#c(-122.389979, 80.249583, -0.1198244, 144.96328, 28.06084)
#> dput(visit.y)
#c(37.615223, 13.060422, 51.5112139, -37.814107, -26.1319199)
#Using GGPLOT, plot the Base World Map
library(ggplot2)
library(maps)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
#Now Layer the cities on top
mp <- mp+ geom_point(aes(x=visit.x, y=visit.y) ,color="blue", size=3)
mp
library(ggmap)
library(maptools)
library(maps)
library(ggplot2)
visited <- c("Berlin", "Moskow", "London", "Tokio", "Hangzhou", "York", "Kent, Ohio", "Athen", "Padua", "Graz", "Wien", "Olomouc", "Prag", "Krakau",
"Wrozlaw", "San Paolo",
"Bratislava", "Barcelona",
"Novosibirsk", "Hiroshima",
"St Petersburg", "Hayderabad",
"Kalkutta", "Szeged", "Dalian", "Kopenhagen",
"Galwey")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
#> dput(visit.x)
#c(-122.389979, 80.249583, -0.1198244, 144.96328, 28.06084)
#> dput(visit.y)
#c(37.615223, 13.060422, 51.5112139, -37.814107, -26.1319199)
#Using GGPLOT, plot the Base World Map
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
#Now Layer the cities on top
mp <- mp+ geom_point(aes(x=visit.x, y=visit.y) ,color="blue", size=3)
mp
q()
plot(rnorm(100))
## Lese die ganze Datei als eine Sammlung von Zeilen ein.
lines <- readLines('../data/t_990505_47.xml')
setwd("~/Documents/Uni_Trier/Statistics/R-Course-2016/Session_01")
source('~/Documents/Uni_Trier/Statistics/R-Course-2016/Session_01/ttr_example.R')
print("Hello World!")
?print
help(print)
??mean
